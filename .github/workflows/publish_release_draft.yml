name: Publish Release Draft
run-name: Release draft for commit ${{ github.sha }}
on:
  push:
    branches:
      - main

env:
  BUILD_ID: '${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}'

jobs:
  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
      - name: Install Dependencies
        run: npm install --legacy-peer-deps
      - name: Build & Publish
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NODE_ENV: production
        run: npm run publish
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Linux-${{ env.BUILD_ID }}.zip
          path: ${{github.workspace}}/out/

  macos:
    name: macOS
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
      - name: Install Dependencies
        run: npm install --legacy-peer-deps
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.MACOS_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MACOS_BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Build & Publish
        env:
          MACOS_APPLE_IDENTITY: ${{ secrets.MACOS_APPLE_IDENTITY }}
          MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
          MACOS_APPLE_PASSWORD: ${{ secrets.MACOS_APPLE_PASSWORD }}
          MACOS_APPLE_TEAM_ID: ${{ secrets.MACOS_APPLE_TEAM_ID }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NODE_ENV: production
        run: npm run publish -- --arch arm64,x64
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MacOS-${{ env.BUILD_ID }}.zip
          path: ${{github.workspace}}/out/

  windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Build & Publish
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NODE_ENV: production
        run: npm run publish
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Windows-${{ env.BUILD_ID }}.zip
          path: ${{github.workspace}}/out/
